openapi: 3.0.0
info:
  version: 1.0.0
  title: Spring Boot REST API
  description: Spring Boot REST API for Online Store

servers:
  - url: http://localhost:8080
  - url: https://localhost:8443

paths:
  /user/{userId}:
    get:
      description: Get single user with no other information
      parameters:
        - name: userId
          in: path
          description: ID of the user to get
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: user found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      description: Delete single user out of the database
      parameters:
        - name: userId
          in: path
          description: ID of the user to get
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: user removed

    put:
      description: Update a user
      parameters:
        - name: userId
          in: path
          description: ID of the user to get
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '204':
          description: User has been updated correctly

  /user:
    post:
      description: Create a new User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User has been created correctly

  /product/{productId}/user:
    get:
      description: Get users that bought this product
      parameters:
        - name: productId
          in: path
          description: ID of the product to retrieve all users associated with it
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: users found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'


  /users:
    get:
      description: Get all users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      description: Create a new user
      responses:
        '200':
          description: OK
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'

  /salehistory/{saleHistoryId}:
    get:
      description: Get a sale history by ID
      parameters:
        - name: saleHistoryId
          in: path
          description: ID of the sale history to retrieve
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Purchase'

  /products:
    get:
      description: Get all products
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
    post:
      description: Create a new product
      responses:
        '200':
          description: OK
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'

  /products/{productId}:
    get:
      description: Get a product by ID
      parameters:
        - name: productId
          in: path
          description: ID of the product to retrieve
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
    put:
      description: Update a product by ID
      parameters:
        - name: productId
          in: path
          description: ID of the product to update
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '204':
          description: Product has been updated correctly
    delete:
      description: Delete a product by ID
      parameters:
        - name: productId
          in: path
          description: ID of the product to delete
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: Product has been removed

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int32
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
        purchaseHistory:
          type: array
          items:
            $ref: '#/components/schemas/Purchase'

    Purchase:
      type: object
      properties:
        id:
          type: integer
          format: int32
        Products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
        isPending:
          type: boolean

    Product:
      type: object
      properties:
        id:
          type: integer
          format: int32
        productname:
          type: string
        quantity:
          type: integer
          format: int32
        seller:
          type: string
        price:
          type: number
          format: double
