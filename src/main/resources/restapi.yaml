openapi: 3.0.0
info:
  version: 1.0.0
  title: Spring Boot REST API
  description: Spring Boot REST API for Online Store

servers:
  - url: http://localhost:8080

paths:
  /users:
    get:
      description: Get all users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      description: Create a new user
      responses:
        '200':
          description: OK
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'

  /users/{userId}:
    get:
      description: Get a user by ID
      parameters:
        - name: userId
          in: path
          description: ID of the user to retrieve
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /salehistory:
    get:
      description: Get all sale histories
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SaleHistory'
    post:
      description: Create a new sale history
      responses:
        '200':
          description: OK
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaleHistory'

  /salehistory/{saleHistoryId}:
    get:
      description: Get a sale history by ID
      parameters:
        - name: saleHistoryId
          in: path
          description: ID of the sale history to retrieve
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaleHistory'

  /products:
    get:
      description: Get all products
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
    post:
      description: Create a new product
      responses:
        '200':
          description: OK
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'

  /products/{productId}:
    get:
      description: Get a product by ID
      parameters:
        - name: productId
          in: path
          description: ID of the product to retrieve
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int32
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string

    SaleHistory:
      type: object
      properties:
        id:
          type: integer
          format: int32
        userId:
          type: integer
          format: int32
        salesProductId:
          type: integer
          format: int32
        isPending:
          type: boolean

    Product:
      type: object
      properties:
        id:
          type: integer
          format: int32
        productname:
          type: string
        quantity:
          type: integer
          format: int32
        seller:
          type: string
        price:
          type: number
          format: double
